mode: rule
ipv6: false
log-level: error
allow-lan: false
tproxy-port: 7894
unified-delay: true
tcp-concurrent: true
external-controller: 0.0.0.0:9090
external-ui: ./ui

# DNS server settings
# This section is optional. When not present, the DNS server will be disabled.
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: false
  # Bootstrap DNS
  default-nameserver: ['1.1.1.1', '1.0.0.1', '8.8.8.8', '8.8.4.4']
  # Upstream DNS
  nameserver: ['https://dns10.quad9.net/dns-query', 'https://dns.aa.net.uk/dns-query']

# find-process-mode: off
# global-client-fingerprint: chrome

profile:
  store-selected: true
  store-fake-ip: true

# Provides a default traffic mark for outbound connections on Linux
routing-mark: 2 # Prevent cyclic redirection

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    # QUIC:
    #   ports: [443, 8443]
  skip-domain:
    - 'Mijia Cloud'

proxies:
  # vless
  - name: 'XX-reality' # change it
    type: vless
    server: xx-reality-server-IP # change it
    port: 443
    uuid: 528aeb97-a633-468d-81f7-8185d26bcb64 # change it
    network: tcp
    tls: true
    udp: true
    flow: xtls-rprx-vision
    servername: masking-domain.example.com # change it
    reality-opts:
      public-key: 2R_qtReOBExLOx1aZj8s4N8x-Ru_wbo-o2neemZEDB0 # change it
      short-id: ae380de2eeded283 # change it
    client-fingerprint: chrome

proxy-groups:
  # Select (used for selecting proxy or proxy group)
  - name: PROXY
    type: select
    # disable-udp: true
    proxies: [XX-reality] # change it, add the others

  # Fallback
  - name: FALLBACK
    type: fallback
    proxies: [XX-reality] # change it, add the others
    url: 'https://www.gstatic.com/generate_204' # or https://cp.cloudflare.com/generate_204
    interval: 300

  # # Load-balance
  # - name: LB-PROXY
  #   type: load-balance
  #   proxies: [XX-reality] # change it, add the others
  #   url: 'https://www.gstatic.com/generate_204'
  #   interval: 300
  #   strategy: consistent-hashing # or round-robin

rule-providers:
  direct-domain:
    behavior: classical
    type: http
    format: text
    url: 'https://YOUR_URL/direct-domain.list' # change it
    interval: 1800
    path: ./ruleset/direct-domain.txt
  direct-ip:
    behavior: classical
    type: http
    format: text
    url: 'https://YOUR_URL/direct-ip.list' # change it
    interval: 1800
    path: ./ruleset/direct-ip.txt
  proxy-domain:
    behavior: classical
    type: http
    format: text
    url: 'https://YOUR_URL/proxy-domain.list' # change it
    interval: 1800
    path: ./ruleset/proxy-domain.txt
  proxy-ip:
    behavior: classical
    type: http
    format: text
    url: 'https://YOUR_URL/proxy-ip.list' # change it
    interval: 1800
    path: ./ruleset/proxy-ip.txt
  antifilter-ip:
    behavior: classical
    type: http
    format: text
    url: 'https://YOUR_URL/antifilter-ip.list' # change it
    interval: 43200
    path: ./ruleset/antifilter-ip.txt

rules:
  - RULE-SET,direct-domain,DIRECT
  - RULE-SET,direct-ip,DIRECT
  - RULE-SET,proxy-domain,PROXY
  - RULE-SET,proxy-ip,PROXY
  - RULE-SET,antifilter-ip,PROXY
  - MATCH,DIRECT
